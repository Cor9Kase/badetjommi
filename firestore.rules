rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check 'attendees' update logic
    function isUpdatingSelfInAttendees() {
      // Definer variabler med 'let' øverst i funksjonen.
      let attendeesExists = 'attendees' in request.resource.data;
      let nextAttendees = request.resource.data.get('attendees', null); // Bruk .get for sikkerhet
      let isList = attendeesExists && nextAttendees is list;
      let currentAttendees = resource.data.get('attendees', []);

      // Bruk ternary (? :) for å beregne 'diff' KUN hvis 'nextAttendees' er en liste.
      // Hvis ikke, bruk en tom diff ([].diff([])) for å unngå feil.
      let diff = isList ? nextAttendees.diff(currentAttendees) : [].diff([]);

      // Returner true KUN hvis det ER en liste OG diff-en matcher betingelsene.
      return isList && (
        (diff.added().size() == 1 && diff.added()[0] == request.auth.uid && diff.removed().size() == 0) ||
        (diff.removed().size() == 1 && diff.removed()[0] == request.auth.uid && diff.added().size() == 0)
      );
    }

    // Public user profiles
    match /users/{userId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Bath entries logged or planned by users
    match /baths/{bathId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;

      allow update: if request.auth != null && (
        // Eieren kan oppdatere
        request.auth.uid == resource.data.userId ||
        // Tillat oppdatering av KUN 'reactions'
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reactions']) ||
        // Tillat oppdatering av KUN 'commentCount'
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['commentCount']) ||
        // Tillat oppdatering av KUN 'reactions' og 'commentCount'
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reactions', 'commentCount']) ||
        // Tillat oppdatering av KUN 'attendees' HVIS brukeren legger til/fjerner seg selv
        (
          request.writeFields.hasOnly(['attendees']) &&
          isUpdatingSelfInAttendees()
        )
      );

      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow update, delete: if false;
      }
    }

    // Deny all other access
    // match /{document=**} {
    //   allow read, write: if false;
    // }
  }
}
