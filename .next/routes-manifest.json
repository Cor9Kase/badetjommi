{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/profil/[userId]",
      "regex": "^/profil/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPuserId": "nxtPuserId"
      },
      "namedRegex": "^/profil/(?<nxtPuserId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/leaderboard",
      "regex": "^/leaderboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/leaderboard(?:/)?$"
    },
    {
      "page": "/logg-bad",
      "regex": "^/logg\\-bad(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/logg\\-bad(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/page",
      "regex": "^/page(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/page(?:/)?$"
    },
    {
      "page": "/planlegg-bad",
      "regex": "^/planlegg\\-bad(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/planlegg\\-bad(?:/)?$"
    },
    {
      "page": "/profil",
      "regex": "^/profil(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profil(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}